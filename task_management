import sqlite3
from datetime import datetime

# Database connection
conn = sqlite3.connect("tasks.db")
cursor = conn.cursor()

# Create table if not exists
cursor.execute('''
CREATE TABLE IF NOT EXISTS tasks (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    description TEXT NOT NULL,
    deadline TEXT,
    status TEXT DEFAULT 'pending'
)
''')
conn.commit()

def add_task(description, deadline):
    cursor.execute("INSERT INTO tasks (description, deadline) VALUES (?, ?)", (description, deadline))
    conn.commit()
    print("Task added successfully!")

def view_tasks(status=None):
    if status:
        cursor.execute("SELECT * FROM tasks WHERE status = ?", (status,))
    else:
        cursor.execute("SELECT * FROM tasks")
    tasks = cursor.fetchall()
    print_tasks(tasks)

def update_task(task_id, new_description=None, new_status=None):
    cursor.execute("SELECT * FROM tasks WHERE id = ?", (task_id,))
    task = cursor.fetchone()
    if not task:
        print("Task not found!")
        return
    
    description = new_description if new_description else task[1]
    status = new_status if new_status else task[3]
    
    cursor.execute("UPDATE tasks SET description = ?, status = ? WHERE id = ?", (description, status, task_id))
    conn.commit()
    print("Task updated successfully!")

def delete_task(task_id):
    cursor.execute("DELETE FROM tasks WHERE id = ?", (task_id,))
    conn.commit()
    print("Task deleted successfully!")

def print_tasks(tasks):
    if not tasks:
        print("No tasks found.")
        return
    print("\nTask List:")
    for task in tasks:
        print(f"ID: {task[0]}, Description: {task[1]}, Deadline: {task[2]}, Status: {task[3]}")

def main():
    while True:
        print("\nTask Management System")
        print("1. Add Task")
        print("2. View All Tasks")
        print("3. View Pending Tasks")
        print("4. View Completed Tasks")
        print("5. Update Task")
        print("6. Delete Task")
        print("7. Exit")
        
        choice = input("Enter your choice: ")
        
        if choice == "1":
            description = input("Enter task description: ")
            deadline = input("Enter deadline (YYYY-MM-DD, optional): ") or None
            add_task(description, deadline)
        elif choice == "2":
            view_tasks()
        elif choice == "3":
            view_tasks("pending")
        elif choice == "4":
            view_tasks("completed")
        elif choice == "5":
            task_id = int(input("Enter task ID to update: "))
            new_description = input("Enter new description (press enter to skip): ") or None
            new_status = input("Enter new status (pending/completed, press enter to skip): ") or None
            update_task(task_id, new_description, new_status)
        elif choice == "6":
            task_id = int(input("Enter task ID to delete: "))
            delete_task(task_id)
        elif choice == "7":
            print("Exiting...")
            break
        else:
            print("Invalid choice, please try again.")

if __name__ == "__main__":
    main()
    conn.close()
